{
    "swagger": "2.0",
    "info": {
        "version": "2.1.0",
        "title": "Credential Delegation web service",
        "description": "The credential delegation web service.\n\n\nThe credential delegation web service is used by the CANFAR web service ecosystem to perform secondary web service operations on behalf of the user. By default, it uses X509 certificates signed by CANFAR and recognized only within CANFAR, but the service also allows users to delegate their own certificates signed by other authorities.\n"
    },
    "host": "www.cadc-ccda.hia-iha.nrc-cnrc.gc.ca",
    "paths": {
        "/cred": {
            "post": {
                "description": "Creates an identity resource (returned in 'location' response header) and a Certificate Signing Request (CSR) that is ready to use.\n",
                "tags": [
                    "Credential Delegation"
                ],
                "schemes": [
                    "https"
                ],
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "headers": {
                            "Location": {
                                "description": "Identity URL",
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User not authenticated"
                    },
                    "404": {
                        "description": "Not Found - User not found"
                    },
                    "500": {
                        "description": "Internal error"
                    },
                    "503": {
                        "description": "Service busy"
                    },
                    "default": {
                        "description": "Unexpeced error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "DN",
                        "in": "query",
                        "description": "The distinguished name to delegate",
                        "required": false,
                        "type": "string"
                    }
                ]
            }
        },
        "{Identity URL}/CSR": {
            "get": {
                "description": "Get the generated CSR for the identity.\n",
                "tags": [
                    "Credential Delegation"
                ],
                "schemes": [
                    "https"
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "title": "The CSR",
                            "type": "file"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User not authenticated"
                    },
                    "404": {
                        "description": "Not Found - User not found"
                    },
                    "500": {
                        "description": "Internal error"
                    },
                    "503": {
                        "description": "Service busy"
                    },
                    "default": {
                        "description": "Unexpeced error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "Identity URL",
                        "in": "path",
                        "description": "The value of the Location header from the initial POST",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "{Identity URL}/certificate": {
            "put": {
                "description": "Upload the signed certificate.\n",
                "tags": [
                    "Credential Delegation"
                ],
                "schemes": [
                    "https"
                ],
                "responses": {
                    "201": {
                        "description": "Successful response"
                    },
                    "401": {
                        "description": "Unauthorized - User not authenticated"
                    },
                    "404": {
                        "description": "Not Found - User not found"
                    },
                    "500": {
                        "description": "Internal error"
                    },
                    "503": {
                        "description": "Service busy"
                    },
                    "default": {
                        "description": "Unexpeced error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "Signed Certificate",
                        "in": "body",
                        "description": "The signed certificate",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/cred/priv/{idType}/{id}": {
            "get": {
                "description": "Get a proxy certificate for a particular user or for the authenticated user making the call.  For a proxy certificate to be created, the user must have delegated their certificate first.\n",
                "tags": [
                    "Credential Delegation"
                ],
                "schemes": [
                    "http",
                    "https"
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "title": "The proxy certificate",
                            "type": "file"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User not authenticated"
                    },
                    "404": {
                        "description": "Not Found - User not found"
                    },
                    "500": {
                        "description": "Internal error"
                    },
                    "503": {
                        "description": "Service busy"
                    },
                    "default": {
                        "description": "Unexpeced error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "idType",
                        "in": "path",
                        "description": "Either 'dn' or 'userid'",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Either the dn value or userid value of the identity, according the the value of {idType}.  If not provided (along with {id}), the user will default to the user who has been authenticated in the request.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "daysValid",
                        "in": "query",
                        "description": "The length of time before the proxy certificate expires.  The maximum time is 30 days.  If not provided (along with {idType}), the user will default to the user who has been authenticated in the request.",
                        "required": false,
                        "default": 30,
                        "type": "float"
                    }
                ]
            }
        },
        "/cred/availability": {
            "get": {
                "tags": [
                    "Support Interfaces"
                ],
                "summary": "VOSI Availability",
                "description": "Indicates whether the service is operable and the reliability of the service for extended and scheduled requests.\n",
                "responses": {
                    "200": {
                        "description": "A VOSI availability document in XML.",
                        "schema": {
                            "$ref": "#/definitions/availability"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "availability": {
            "type": "object",
            "xml": {
                "namespace": "http://www.ivoa.net/xml/VOSIAvailability/v1.0",
                "prefix": "vosi"
            },
            "properties": {
                "available": {
                    "type": "boolean",
                    "xml": {
                        "attribute": true,
                        "prefix": "vosi"
                    }
                },
                "note": {
                    "type": "string",
                    "xml": {
                        "attribute": true,
                        "prefix": "vosi"
                    }
                }
            }
        },
        "capabilities": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/capability"
            },
            "xml": {
                "namespace": "http://www.ivoa.net/xml/VOSICapabilities/v1.0",
                "prefix": "vosi",
                "wrapped": true
            }
        },
        "capability": {
            "type": "object",
            "properties": {
                "standardID": {
                    "type": "string",
                    "format": "uri",
                    "xml": {
                        "attribute": true
                    }
                },
                "interface": {
                    "type": "object",
                    "properties": {
                        "accessURL": {
                            "type": "string",
                            "properties": {
                                "use": {
                                    "type": "string",
                                    "xml": {
                                        "attribute": true
                                    }
                                }
                            }
                        },
                        "securityMethod": {
                            "type": "string",
                            "properties": {
                                "standardID": {
                                    "type": "string",
                                    "format": "uri",
                                    "xml": {
                                        "attribute": true
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "Error": {
            "required": [
                "code",
                "message"
            ],
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}
